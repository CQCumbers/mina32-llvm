; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=mina32 -verify-machineinstrs < %s \
; RUN:   | FileCheck %s -check-prefix=M32I

; Ensure that the ISDOpcodes ADDC, ADDE, SUBC, SUBE are handled correctly

define i64 @addc_adde(i64 %a, i64 %b) {
; M32I-LABEL: addc_adde:
; M32I:       ; %bb.0:
; M32I-NEXT:    addi $sp, $sp, -4
; M32I-NEXT:    st $r11, [$sp, 0]
; M32I-NEXT:    addi $r11, $sp, 4
; M32I-NEXT:    add $r1, $r1, $r3
; M32I-NEXT:    add $r2, $r0, $r2
; M32I-NEXT:    sltu $r0, $r2, $r0
; M32I-NEXT:    add $r1, $r1, $r0
; M32I-NEXT:    addi $r0, $r2, 0
; M32I-NEXT:    ld $r11, [$sp, 0]
; M32I-NEXT:    addi $sp, $sp, 4
; M32I-NEXT:    ret
  %1 = add i64 %a, %b
  ret i64 %1
}

define i64 @subc_sube(i64 %a, i64 %b) {
; M32I-LABEL: subc_sube:
; M32I:       ; %bb.0:
; M32I-NEXT:    addi $sp, $sp, -4
; M32I-NEXT:    st $r11, [$sp, 0]
; M32I-NEXT:    addi $r11, $sp, 4
; M32I-NEXT:    sub $r1, $r1, $r3
; M32I-NEXT:    sltu $r3, $r0, $r2
; M32I-NEXT:    sub $r1, $r1, $r3
; M32I-NEXT:    sub $r0, $r0, $r2
; M32I-NEXT:    ld $r11, [$sp, 0]
; M32I-NEXT:    addi $sp, $sp, 4
; M32I-NEXT:    ret
  %1 = sub i64 %a, %b
  ret i64 %1
}
