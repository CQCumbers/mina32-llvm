//===-- MINA32Subtarget.h - Define Subtarget for the MINA32 -----*- C++ -*-===//
//
// Part of the LLVM fork for the MINA32 project, under the Apache License v2.0
// with LLVM Exceptions. See https://llvm.org/LICENSE.txt for license
// information.
// SPDX-License-Identifier: Apache-2.0 with LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the MINA32-specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_TARGET_MINA32_SUBTARGET_H
#define LLVM_TARGET_MINA32_SUBTARGET_H

#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#include "MINA32FrameLowering.h"
#include "MINA32ISelLowering.h"
#include "MINA32InstrInfo.h"

#define GET_SUBTARGETINFO_HEADER
#include "MINA32GenSubtargetInfo.inc"

namespace llvm {

/// A specific MINA32 target CPU.
class MINA32Subtarget : public MINA32GenSubtargetInfo {
public:
  MINA32Subtarget(const Triple &TT, const std::string &CPU,
                  const std::string &FS, const TargetMachine &TM);

  const MINA32InstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const TargetFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const MINA32RegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }
  const MINA32TargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }

  /// Parses a subtarget feature string, setting appropriate options.
  /// \note Definition of function is auto-generated by `tblgen`.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  MINA32Subtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS,
                                                   const TargetMachine &TM);

  // Subtarget feature getters.
  // See MINA32.td for details.
  // TODO

private:
  virtual void anchor();

  // Subtarget feature settings
  // See MINA32.td for details.
  // TODO

  MINA32InstrInfo InstrInfo;
  MINA32FrameLowering FrameLowering;
  MINA32TargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;
};

} // end namespace llvm

#endif // LLVM_TARGET_MINA32_SUBTARGET_H
